@model LMS.Models.LoanViewModel
@using LMS.Models
@using PagedList.Mvc
@Styles.Render("~/Content/PagedList")
<div class="box">
    <div class="box-header">
        <h3 class="box-title">ঋণ সমূহ</h3>

        <div class="box-tools">
            <a class="btn btn-sm btn-success" href="@Url.Action("Add","Loan")"><i class="fa fa-plus"></i></a>
        </div>
    </div>
    <!-- /.box-header -->
    <div class="box-body no-padding">
        <div class="form-horizontal">
            @using (Html.BeginForm("Index", "Loan", FormMethod.Post, new { @class = "", @id = "taxStampDemandSearchForm" }))
            {
                <div class="col-md-12">
                  
                    <div class="form-group col-md-3">
                        @Html.Label("তারিখ  :", new { @class = "col-md-5 control-label" })
                        <div class="col-md-7">
                            @Html.TextBoxFor(model => model.DateFrom, new { @class = "form-control input-sm datePicker", @autocomplete = "off" })
                        </div>
                    </div>
                    <div class="form-group col-md-3">
                        @Html.Label("-", new { @class = "col-md-1 control-label" })
                        <div class="col-md-7">
                            @Html.TextBoxFor(model => model.DateTo, new { @class = "form-control input-sm datePicker", @autocomplete = "off" })
                        </div>
                    </div>
                    <div class="form-group col-md-4">
                        @Html.Label("সদস্য", new { @class = "col-md-5 control-label" })
                        <div class="col-md-7">
                            @Html.DropDownListFor(model => model.MemberId,new SelectList(Model.MemberList,"Id","MemberName"),"Choose--", new { @class = "form-control input-sm select2" })
                        </div>
                    </div>


                    <div class="form-group col-md-2">
                        <button type="submit" class="btn btn-sm btn-success">
                            <span class="glyphicon glyphicon-search"></span>
                        </button>
                        <a class="btn btn-sm btn-info" href='@Url.Action("Index","Loan")'>
                            <span class="fa fa-refresh"></span>
                        </a>

                    </div>

                </div>
            }

        </div>
        <table class="table table-bordered">
            <tr>

                <th>#</th>
                <th>@Html.DisplayNameFor(model => model.LoanPageList.FirstOrDefault().MemberId)</th>
                <th>@Html.DisplayNameFor(model => model.LoanPageList.FirstOrDefault().ProjectName)</th>
                <th>@Html.DisplayNameFor(model => model.LoanPageList.FirstOrDefault().LoanAmount)</th>
                <th>@Html.DisplayNameFor(model => model.LoanPageList.FirstOrDefault().ProfitAmount)</th>
                <th>@Html.DisplayNameFor(model => model.LoanPageList.FirstOrDefault().ServiceAmount)</th>
                <th>@Html.DisplayNameFor(model => model.LoanPageList.FirstOrDefault().PayableAmount)</th>
                <th>@Html.DisplayNameFor(model => model.LoanPageList.FirstOrDefault().Status)</th>
                <th></th>

            </tr>
            @{
                int i = 1;
                foreach (var loan in Model.LoanPageList)
                {
                    <tr>
                        <th><img height="50" width="50" src="@Url.Content(loan.Member.Image)"></th>
                        <th>@Html.DisplayFor(model => loan.Member.MemberName)</th>
                        <th>@Html.DisplayFor(model => loan.ProjectName)</th>
                        <th>@Html.DisplayFor(model => loan.LoanAmount)</th>
                        <th>@Html.DisplayFor(model => loan.ProfitAmount)</th>
                        <th>@Html.DisplayFor(model => loan.ServiceAmount)</th>
                        <th>@Html.DisplayFor(model => loan.PayableAmount)</th>
                        <th>
                            <span class="badge bg-green-active">
                                @Enum.GetName(typeof(EnumStatus), loan.Status)
                            </span>
                        </th>
                        <th>
                            @if (loan.Status == (byte)EnumStatus.Active)
                            {
                                <a class="btn btn-sm btn-success" href="@Url.Action("Edit","Loan",new {id=loan.Id })"><i class="fa fa-edit"></i></a>
                            }

                        </th>

                    </tr>
                }
            }
        </table>
    </div>
    <div class="box-footer">
        <div class="main-pagination">
            Page @(Model.LoanPageList.PageCount < Model.LoanPageList.PageNumber ? 0 : Model.LoanPageList.PageNumber) of @Model.LoanPageList.PageCount
            @Html.PagedListPager(Model.LoanPageList, Page => Url.Action("Index", "Loan", new RouteValueDictionary() { { "Page", Page }, { "PageSize", Model.PageSize }, { "DateFrom", Model.DateFrom }, { "DateTo", Model.DateTo }, { "MemberId", Model.MemberId } }))
        </div>
    </div>
</div>
<!-- /.box -->
