@model LMS.Models.MemberViewModel
@using PagedList.Mvc
@Styles.Render("~/Content/PagedList")
<div class="box">
    <div class="box-header">
        <h3 class="box-title"></h3>

        <div class="box-tools">
            <a class="btn btn-sm btn-success" href="@Url.Action("Add","Member")"><i class="fa fa-plus"></i></a>
        </div>
    </div>
    <!-- /.box-header -->
    <div class="box-body no-padding">
        <div class="form-horizontal">
            @using (Html.BeginForm("Index", "Member", FormMethod.Post, new { @class = "", @id = "taxStampDemandSearchForm" }))
            {
                <div class="col-md-12">
                   
                    <div class="form-group col-md-4">
                        @Html.Label("নাম", new { @class = "col-md-5 control-label" })
                        <div class="col-md-7">
                            @Html.TextBoxFor(model => model.Name,  new { @class = "form-control input-sm select2" })
                        </div>
                    </div>  
                    <div class="form-group col-md-4">
                        @Html.Label("দল", new { @class = "col-md-5 control-label" })
                        <div class="col-md-7">
                            @Html.DropDownListFor(model => model.GroupId, new SelectList(Model.GroupList, "Id", "GroupName"), "Choose--", new { @class = "form-control input-sm select2" })
                        </div>
                    </div>


                    <div class="form-group col-md-2">
                        <button type="submit" class="btn btn-sm btn-success">
                            <span class="glyphicon glyphicon-search"></span>
                        </button>
                        <a class="btn btn-sm btn-info" href='@Url.Action("Index","Loan")'>
                            <span class="fa fa-refresh"></span>
                        </a>

                    </div>

                </div>
            }

        </div>
        <table class="table table-bordered">
            <tr>
                <th></th>
                <th>@Html.DisplayNameFor(model => model.MemberList.FirstOrDefault().MemberName)</th>
                <th>@Html.DisplayNameFor(model => model.MemberList.FirstOrDefault().FatherName)</th>
                <th>@Html.DisplayNameFor(model => model.MemberList.FirstOrDefault().MothersName)</th>
                <th>@Html.DisplayNameFor(model => model.MemberList.FirstOrDefault().GroupId)</th>
                <th>@Html.DisplayNameFor(model => model.MemberList.FirstOrDefault().MobileNo)</th>
                <th>@Html.DisplayNameFor(model => model.MemberList.FirstOrDefault().Profession)</th>
                <th>@Html.DisplayNameFor(model => model.MemberList.FirstOrDefault().ParmanentAddress)</th>
                <th>@Html.DisplayNameFor(model => model.MemberList.FirstOrDefault().PresentAddress)</th>
                   <th>@Html.DisplayNameFor(model => model.MemberList.FirstOrDefault().Status)</th>
                <th></th>

            </tr>
            @{

                foreach (var member in Model.MemberList)
                {
                    <tr>
                        <th><img height="50" width="50" src="@Url.Content(member.Image)"></th>
                        <th><a target="_blank" href="@Url.Action("Details","Member",new { id=member.Id})">@Html.DisplayFor(model => member.MemberName)</a></th>
                        <th>@Html.DisplayFor(model => member.FatherName)</th>
                        <th>@Html.DisplayFor(model => member.MothersName)</th>
                        <th>@Html.DisplayFor(model => member.Group.GroupName)</th>
                        <th>@Html.DisplayFor(model => member.MobileNo)</th>
                        <th>@Html.DisplayFor(model => member.Profession)</th>
                        <th>@Html.DisplayFor(model => member.ParmanentAddress)</th>
                        <th>@Html.DisplayFor(model => member.PresentAddress)</th>
                       

                        <th>
                            <span class="badge bg-green-active">
                                @Enum.GetName(typeof(EnumStatus), member.Status)
                            </span>
                        </th>
                        <th nowrap="nowrap">
                            @if (member.Status == (byte)EnumStatus.Active)
                            {
                                <a class="btn btn-sm btn-success" href="@Url.Action("Edit","Member",new {id=member.Id })"><i class="fa fa-edit"></i></a>
                                <a class="btn btn-sm btn-danger" href="@Url.Action("Deactive","Member",new {id=member.Id })" onclick="confirm('ডিএক্টিব  করতে চান?')? true : event.preventDefault()"><i class="fa fa-times"></i></a>

                            }
                            else
                            {
                                <a class="btn btn-sm btn-danger" href="@Url.Action("Active","Member",new {id=member.Id })" onclick="confirm('এক্টিব করতে চান?')? true : event.preventDefault()"><i class="fa fa-recycle"></i></a>
                            }
                        </th>

                    </tr>
                }
            }
        </table>
    </div>
    <!-- /.box-body -->
    <div class="box-footer">
        <div class="main-pagination">
            Page @(Model.MemberList.PageCount < Model.MemberList.PageNumber ? 0 : Model.MemberList.PageNumber) of @Model.MemberList.PageCount
            @Html.PagedListPager(Model.MemberList, Page => Url.Action("Index", "Member", new RouteValueDictionary() { { "Page", Page }, { "PageSize", Model.PageSize }, { "Name", Model.Name } }))
        </div>
    </div>
</div>
<!-- /.box -->
